#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ClinicaGPV")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEspecialidades(Especialidades instance);
    partial void UpdateEspecialidades(Especialidades instance);
    partial void DeleteEspecialidades(Especialidades instance);
    partial void InsertIngresos(Ingresos instance);
    partial void UpdateIngresos(Ingresos instance);
    partial void DeleteIngresos(Ingresos instance);
    partial void InsertMedicos(Medicos instance);
    partial void UpdateMedicos(Medicos instance);
    partial void DeleteMedicos(Medicos instance);
    partial void InsertMedicosEspecialidades(MedicosEspecialidades instance);
    partial void UpdateMedicosEspecialidades(MedicosEspecialidades instance);
    partial void DeleteMedicosEspecialidades(MedicosEspecialidades instance);
    partial void InsertPacientes(Pacientes instance);
    partial void UpdatePacientes(Pacientes instance);
    partial void DeletePacientes(Pacientes instance);
    partial void InsertVisitas(Visitas instance);
    partial void UpdateVisitas(Visitas instance);
    partial void DeleteVisitas(Visitas instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::CDatos.Properties.Settings.Default.ClinicaGPVConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Especialidades> Especialidades
		{
			get
			{
				return this.GetTable<Especialidades>();
			}
		}
		
		public System.Data.Linq.Table<Ingresos> Ingresos
		{
			get
			{
				return this.GetTable<Ingresos>();
			}
		}
		
		public System.Data.Linq.Table<Medicos> Medicos
		{
			get
			{
				return this.GetTable<Medicos>();
			}
		}
		
		public System.Data.Linq.Table<MedicosEspecialidades> MedicosEspecialidades
		{
			get
			{
				return this.GetTable<MedicosEspecialidades>();
			}
		}
		
		public System.Data.Linq.Table<Pacientes> Pacientes
		{
			get
			{
				return this.GetTable<Pacientes>();
			}
		}
		
		public System.Data.Linq.Table<Visitas> Visitas
		{
			get
			{
				return this.GetTable<Visitas>();
			}
		}
		
		public System.Data.Linq.Table<primera_consulta> primera_consulta
		{
			get
			{
				return this.GetTable<primera_consulta>();
			}
		}
		
		public System.Data.Linq.Table<segunda_consulta> segunda_consulta
		{
			get
			{
				return this.GetTable<segunda_consulta>();
			}
		}
		
		public System.Data.Linq.Table<tercera_consulta> tercera_consulta
		{
			get
			{
				return this.GetTable<tercera_consulta>();
			}
		}
		
		public System.Data.Linq.Table<cuarta_consulta> cuarta_consulta
		{
			get
			{
				return this.GetTable<cuarta_consulta>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ingresar_paciente")]
		public int ingresar_paciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(5)")] string codigo_postal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string provincia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> fecha_nacimiento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, apellido, direccion, codigo_postal, provincia, telefono, fecha_nacimiento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ingreso_especialidades")]
		public int ingreso_especialidades([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string especialidad)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), especialidad);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ingreso_medico_especialidades")]
		public int ingreso_medico_especialidades([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> especialidades_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medico_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), especialidades_id, medico_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ingreso_medicos")]
		public int ingreso_medicos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string apellidos, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string telefono)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, apellidos, telefono);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.registrar_visita")]
		public int registrar_visita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paciente_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medico_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> fecha, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string diagnostico, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string tratamiento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paciente_id, medico_id, fecha, diagnostico, tratamiento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.registro_ingreso")]
		public int registro_ingreso([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paciente_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> habitacion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(1)")] System.Nullable<char> cama, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fecha_ingreso)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paciente_ID, habitacion, cama, fecha_ingreso);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.quinta_consulta")]
		public ISingleResult<quinta_consultaResult> quinta_consulta()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<quinta_consultaResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialidades")]
	public partial class Especialidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EspecialidadId;
		
		private string _Especialidad;
		
		private EntitySet<MedicosEspecialidades> _MedicosEspecialidades;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEspecialidadIdChanging(int value);
    partial void OnEspecialidadIdChanged();
    partial void OnEspecialidadChanging(string value);
    partial void OnEspecialidadChanged();
    #endregion
		
		public Especialidades()
		{
			this._MedicosEspecialidades = new EntitySet<MedicosEspecialidades>(new Action<MedicosEspecialidades>(this.attach_MedicosEspecialidades), new Action<MedicosEspecialidades>(this.detach_MedicosEspecialidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspecialidadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EspecialidadId
		{
			get
			{
				return this._EspecialidadId;
			}
			set
			{
				if ((this._EspecialidadId != value))
				{
					this.OnEspecialidadIdChanging(value);
					this.SendPropertyChanging();
					this._EspecialidadId = value;
					this.SendPropertyChanged("EspecialidadId");
					this.OnEspecialidadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidades_MedicosEspecialidades", Storage="_MedicosEspecialidades", ThisKey="EspecialidadId", OtherKey="EspecialidadId")]
		public EntitySet<MedicosEspecialidades> MedicosEspecialidades
		{
			get
			{
				return this._MedicosEspecialidades;
			}
			set
			{
				this._MedicosEspecialidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedicosEspecialidades(MedicosEspecialidades entity)
		{
			this.SendPropertyChanging();
			entity.Especialidades = this;
		}
		
		private void detach_MedicosEspecialidades(MedicosEspecialidades entity)
		{
			this.SendPropertyChanging();
			entity.Especialidades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingresos")]
	public partial class Ingresos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumIngreso;
		
		private System.Nullable<int> _PacienteId;
		
		private int _Habitacion;
		
		private char _Cama;
		
		private System.DateTime _FechaIngreso;
		
		private EntityRef<Pacientes> _Pacientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumIngresoChanging(int value);
    partial void OnNumIngresoChanged();
    partial void OnPacienteIdChanging(System.Nullable<int> value);
    partial void OnPacienteIdChanged();
    partial void OnHabitacionChanging(int value);
    partial void OnHabitacionChanged();
    partial void OnCamaChanging(char value);
    partial void OnCamaChanged();
    partial void OnFechaIngresoChanging(System.DateTime value);
    partial void OnFechaIngresoChanged();
    #endregion
		
		public Ingresos()
		{
			this._Pacientes = default(EntityRef<Pacientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumIngreso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumIngreso
		{
			get
			{
				return this._NumIngreso;
			}
			set
			{
				if ((this._NumIngreso != value))
				{
					this.OnNumIngresoChanging(value);
					this.SendPropertyChanging();
					this._NumIngreso = value;
					this.SendPropertyChanged("NumIngreso");
					this.OnNumIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteId", DbType="Int")]
		public System.Nullable<int> PacienteId
		{
			get
			{
				return this._PacienteId;
			}
			set
			{
				if ((this._PacienteId != value))
				{
					if (this._Pacientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteIdChanging(value);
					this.SendPropertyChanging();
					this._PacienteId = value;
					this.SendPropertyChanged("PacienteId");
					this.OnPacienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habitacion", DbType="Int NOT NULL")]
		public int Habitacion
		{
			get
			{
				return this._Habitacion;
			}
			set
			{
				if ((this._Habitacion != value))
				{
					this.OnHabitacionChanging(value);
					this.SendPropertyChanging();
					this._Habitacion = value;
					this.SendPropertyChanged("Habitacion");
					this.OnHabitacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cama", DbType="Char(1) NOT NULL")]
		public char Cama
		{
			get
			{
				return this._Cama;
			}
			set
			{
				if ((this._Cama != value))
				{
					this.OnCamaChanging(value);
					this.SendPropertyChanging();
					this._Cama = value;
					this.SendPropertyChanged("Cama");
					this.OnCamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaIngreso", DbType="DateTime NOT NULL")]
		public System.DateTime FechaIngreso
		{
			get
			{
				return this._FechaIngreso;
			}
			set
			{
				if ((this._FechaIngreso != value))
				{
					this.OnFechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._FechaIngreso = value;
					this.SendPropertyChanged("FechaIngreso");
					this.OnFechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacientes_Ingresos", Storage="_Pacientes", ThisKey="PacienteId", OtherKey="PacienteId", IsForeignKey=true)]
		public Pacientes Pacientes
		{
			get
			{
				return this._Pacientes.Entity;
			}
			set
			{
				Pacientes previousValue = this._Pacientes.Entity;
				if (((previousValue != value) 
							|| (this._Pacientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacientes.Entity = null;
						previousValue.Ingresos.Remove(this);
					}
					this._Pacientes.Entity = value;
					if ((value != null))
					{
						value.Ingresos.Add(this);
						this._PacienteId = value.PacienteId;
					}
					else
					{
						this._PacienteId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pacientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicos")]
	public partial class Medicos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MedicoId;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Telefono;
		
		private EntitySet<MedicosEspecialidades> _MedicosEspecialidades;
		
		private EntitySet<Visitas> _Visitas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicoIdChanging(int value);
    partial void OnMedicoIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Medicos()
		{
			this._MedicosEspecialidades = new EntitySet<MedicosEspecialidades>(new Action<MedicosEspecialidades>(this.attach_MedicosEspecialidades), new Action<MedicosEspecialidades>(this.detach_MedicosEspecialidades));
			this._Visitas = new EntitySet<Visitas>(new Action<Visitas>(this.attach_Visitas), new Action<Visitas>(this.detach_Visitas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MedicoId
		{
			get
			{
				return this._MedicoId;
			}
			set
			{
				if ((this._MedicoId != value))
				{
					this.OnMedicoIdChanging(value);
					this.SendPropertyChanging();
					this._MedicoId = value;
					this.SendPropertyChanged("MedicoId");
					this.OnMedicoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicos_MedicosEspecialidades", Storage="_MedicosEspecialidades", ThisKey="MedicoId", OtherKey="MedicoId")]
		public EntitySet<MedicosEspecialidades> MedicosEspecialidades
		{
			get
			{
				return this._MedicosEspecialidades;
			}
			set
			{
				this._MedicosEspecialidades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicos_Visitas", Storage="_Visitas", ThisKey="MedicoId", OtherKey="MedicoId")]
		public EntitySet<Visitas> Visitas
		{
			get
			{
				return this._Visitas;
			}
			set
			{
				this._Visitas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedicosEspecialidades(MedicosEspecialidades entity)
		{
			this.SendPropertyChanging();
			entity.Medicos = this;
		}
		
		private void detach_MedicosEspecialidades(MedicosEspecialidades entity)
		{
			this.SendPropertyChanging();
			entity.Medicos = null;
		}
		
		private void attach_Visitas(Visitas entity)
		{
			this.SendPropertyChanging();
			entity.Medicos = this;
		}
		
		private void detach_Visitas(Visitas entity)
		{
			this.SendPropertyChanging();
			entity.Medicos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicosEspecialidades")]
	public partial class MedicosEspecialidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MedicosEspecialidadesId;
		
		private int _EspecialidadId;
		
		private int _MedicoId;
		
		private EntityRef<Especialidades> _Especialidades;
		
		private EntityRef<Medicos> _Medicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicosEspecialidadesIdChanging(int value);
    partial void OnMedicosEspecialidadesIdChanged();
    partial void OnEspecialidadIdChanging(int value);
    partial void OnEspecialidadIdChanged();
    partial void OnMedicoIdChanging(int value);
    partial void OnMedicoIdChanged();
    #endregion
		
		public MedicosEspecialidades()
		{
			this._Especialidades = default(EntityRef<Especialidades>);
			this._Medicos = default(EntityRef<Medicos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicosEspecialidadesId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MedicosEspecialidadesId
		{
			get
			{
				return this._MedicosEspecialidadesId;
			}
			set
			{
				if ((this._MedicosEspecialidadesId != value))
				{
					this.OnMedicosEspecialidadesIdChanging(value);
					this.SendPropertyChanging();
					this._MedicosEspecialidadesId = value;
					this.SendPropertyChanged("MedicosEspecialidadesId");
					this.OnMedicosEspecialidadesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspecialidadId", DbType="Int NOT NULL")]
		public int EspecialidadId
		{
			get
			{
				return this._EspecialidadId;
			}
			set
			{
				if ((this._EspecialidadId != value))
				{
					if (this._Especialidades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEspecialidadIdChanging(value);
					this.SendPropertyChanging();
					this._EspecialidadId = value;
					this.SendPropertyChanged("EspecialidadId");
					this.OnEspecialidadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicoId", DbType="Int NOT NULL")]
		public int MedicoId
		{
			get
			{
				return this._MedicoId;
			}
			set
			{
				if ((this._MedicoId != value))
				{
					if (this._Medicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedicoIdChanging(value);
					this.SendPropertyChanging();
					this._MedicoId = value;
					this.SendPropertyChanged("MedicoId");
					this.OnMedicoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidades_MedicosEspecialidades", Storage="_Especialidades", ThisKey="EspecialidadId", OtherKey="EspecialidadId", IsForeignKey=true)]
		public Especialidades Especialidades
		{
			get
			{
				return this._Especialidades.Entity;
			}
			set
			{
				Especialidades previousValue = this._Especialidades.Entity;
				if (((previousValue != value) 
							|| (this._Especialidades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidades.Entity = null;
						previousValue.MedicosEspecialidades.Remove(this);
					}
					this._Especialidades.Entity = value;
					if ((value != null))
					{
						value.MedicosEspecialidades.Add(this);
						this._EspecialidadId = value.EspecialidadId;
					}
					else
					{
						this._EspecialidadId = default(int);
					}
					this.SendPropertyChanged("Especialidades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicos_MedicosEspecialidades", Storage="_Medicos", ThisKey="MedicoId", OtherKey="MedicoId", IsForeignKey=true)]
		public Medicos Medicos
		{
			get
			{
				return this._Medicos.Entity;
			}
			set
			{
				Medicos previousValue = this._Medicos.Entity;
				if (((previousValue != value) 
							|| (this._Medicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Medicos.Entity = null;
						previousValue.MedicosEspecialidades.Remove(this);
					}
					this._Medicos.Entity = value;
					if ((value != null))
					{
						value.MedicosEspecialidades.Add(this);
						this._MedicoId = value.MedicoId;
					}
					else
					{
						this._MedicoId = default(int);
					}
					this.SendPropertyChanged("Medicos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacientes")]
	public partial class Pacientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PacienteId;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Direccion;
		
		private string _CodigoPostal;
		
		private string _Provincia;
		
		private string _Telefono;
		
		private System.DateTime _FechaNacimiento;
		
		private EntitySet<Ingresos> _Ingresos;
		
		private EntitySet<Visitas> _Visitas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPacienteIdChanging(int value);
    partial void OnPacienteIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnCodigoPostalChanging(string value);
    partial void OnCodigoPostalChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    #endregion
		
		public Pacientes()
		{
			this._Ingresos = new EntitySet<Ingresos>(new Action<Ingresos>(this.attach_Ingresos), new Action<Ingresos>(this.detach_Ingresos));
			this._Visitas = new EntitySet<Visitas>(new Action<Visitas>(this.attach_Visitas), new Action<Visitas>(this.detach_Visitas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PacienteId
		{
			get
			{
				return this._PacienteId;
			}
			set
			{
				if ((this._PacienteId != value))
				{
					this.OnPacienteIdChanging(value);
					this.SendPropertyChanging();
					this._PacienteId = value;
					this.SendPropertyChanged("PacienteId");
					this.OnPacienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoPostal", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				if ((this._CodigoPostal != value))
				{
					this.OnCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._CodigoPostal = value;
					this.SendPropertyChanged("CodigoPostal");
					this.OnCodigoPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(12)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacientes_Ingresos", Storage="_Ingresos", ThisKey="PacienteId", OtherKey="PacienteId")]
		public EntitySet<Ingresos> Ingresos
		{
			get
			{
				return this._Ingresos;
			}
			set
			{
				this._Ingresos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacientes_Visitas", Storage="_Visitas", ThisKey="PacienteId", OtherKey="PacienteId")]
		public EntitySet<Visitas> Visitas
		{
			get
			{
				return this._Visitas;
			}
			set
			{
				this._Visitas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ingresos(Ingresos entity)
		{
			this.SendPropertyChanging();
			entity.Pacientes = this;
		}
		
		private void detach_Ingresos(Ingresos entity)
		{
			this.SendPropertyChanging();
			entity.Pacientes = null;
		}
		
		private void attach_Visitas(Visitas entity)
		{
			this.SendPropertyChanging();
			entity.Pacientes = this;
		}
		
		private void detach_Visitas(Visitas entity)
		{
			this.SendPropertyChanging();
			entity.Pacientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visitas")]
	public partial class Visitas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumVisita;
		
		private int _PacienteId;
		
		private int _MedicoId;
		
		private System.DateTime _Fecha;
		
		private string _Diagnostico;
		
		private string _Tratamiento;
		
		private EntityRef<Medicos> _Medicos;
		
		private EntityRef<Pacientes> _Pacientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumVisitaChanging(int value);
    partial void OnNumVisitaChanged();
    partial void OnPacienteIdChanging(int value);
    partial void OnPacienteIdChanged();
    partial void OnMedicoIdChanging(int value);
    partial void OnMedicoIdChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDiagnosticoChanging(string value);
    partial void OnDiagnosticoChanged();
    partial void OnTratamientoChanging(string value);
    partial void OnTratamientoChanged();
    #endregion
		
		public Visitas()
		{
			this._Medicos = default(EntityRef<Medicos>);
			this._Pacientes = default(EntityRef<Pacientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumVisita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumVisita
		{
			get
			{
				return this._NumVisita;
			}
			set
			{
				if ((this._NumVisita != value))
				{
					this.OnNumVisitaChanging(value);
					this.SendPropertyChanging();
					this._NumVisita = value;
					this.SendPropertyChanged("NumVisita");
					this.OnNumVisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteId", DbType="Int NOT NULL")]
		public int PacienteId
		{
			get
			{
				return this._PacienteId;
			}
			set
			{
				if ((this._PacienteId != value))
				{
					if (this._Pacientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteIdChanging(value);
					this.SendPropertyChanging();
					this._PacienteId = value;
					this.SendPropertyChanged("PacienteId");
					this.OnPacienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicoId", DbType="Int NOT NULL")]
		public int MedicoId
		{
			get
			{
				return this._MedicoId;
			}
			set
			{
				if ((this._MedicoId != value))
				{
					if (this._Medicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedicoIdChanging(value);
					this.SendPropertyChanging();
					this._MedicoId = value;
					this.SendPropertyChanged("MedicoId");
					this.OnMedicoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnostico", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Diagnostico
		{
			get
			{
				return this._Diagnostico;
			}
			set
			{
				if ((this._Diagnostico != value))
				{
					this.OnDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._Diagnostico = value;
					this.SendPropertyChanged("Diagnostico");
					this.OnDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tratamiento", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tratamiento
		{
			get
			{
				return this._Tratamiento;
			}
			set
			{
				if ((this._Tratamiento != value))
				{
					this.OnTratamientoChanging(value);
					this.SendPropertyChanging();
					this._Tratamiento = value;
					this.SendPropertyChanged("Tratamiento");
					this.OnTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicos_Visitas", Storage="_Medicos", ThisKey="MedicoId", OtherKey="MedicoId", IsForeignKey=true)]
		public Medicos Medicos
		{
			get
			{
				return this._Medicos.Entity;
			}
			set
			{
				Medicos previousValue = this._Medicos.Entity;
				if (((previousValue != value) 
							|| (this._Medicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Medicos.Entity = null;
						previousValue.Visitas.Remove(this);
					}
					this._Medicos.Entity = value;
					if ((value != null))
					{
						value.Visitas.Add(this);
						this._MedicoId = value.MedicoId;
					}
					else
					{
						this._MedicoId = default(int);
					}
					this.SendPropertyChanged("Medicos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacientes_Visitas", Storage="_Pacientes", ThisKey="PacienteId", OtherKey="PacienteId", IsForeignKey=true)]
		public Pacientes Pacientes
		{
			get
			{
				return this._Pacientes.Entity;
			}
			set
			{
				Pacientes previousValue = this._Pacientes.Entity;
				if (((previousValue != value) 
							|| (this._Pacientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacientes.Entity = null;
						previousValue.Visitas.Remove(this);
					}
					this._Pacientes.Entity = value;
					if ((value != null))
					{
						value.Visitas.Add(this);
						this._PacienteId = value.PacienteId;
					}
					else
					{
						this._PacienteId = default(int);
					}
					this.SendPropertyChanged("Pacientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.primera_consulta")]
	public partial class primera_consulta
	{
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private System.Nullable<int> _NumEspec;
		
		public primera_consulta()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this._Apellidos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumEspec", DbType="Int")]
		public System.Nullable<int> NumEspec
		{
			get
			{
				return this._NumEspec;
			}
			set
			{
				if ((this._NumEspec != value))
				{
					this._NumEspec = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.segunda_consulta")]
	public partial class segunda_consulta
	{
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private System.Nullable<int> _NumIngresos;
		
		public segunda_consulta()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this._Apellidos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumIngresos", DbType="Int")]
		public System.Nullable<int> NumIngresos
		{
			get
			{
				return this._NumIngresos;
			}
			set
			{
				if ((this._NumIngresos != value))
				{
					this._NumIngresos = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tercera_consulta")]
	public partial class tercera_consulta
	{
		
		private int _PacienteId;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Direccion;
		
		private string _CodigoPostal;
		
		private string _Provincia;
		
		private string _Telefono;
		
		private System.DateTime _FechaNacimiento;
		
		public tercera_consulta()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int PacienteId
		{
			get
			{
				return this._PacienteId;
			}
			set
			{
				if ((this._PacienteId != value))
				{
					this._PacienteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this._Apellidos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoPostal", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				if ((this._CodigoPostal != value))
				{
					this._CodigoPostal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this._Provincia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(12)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this._FechaNacimiento = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cuarta_consulta")]
	public partial class cuarta_consulta
	{
		
		private int _PacienteID;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		public cuarta_consulta()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteID", DbType="Int NOT NULL")]
		public int PacienteID
		{
			get
			{
				return this._PacienteID;
			}
			set
			{
				if ((this._PacienteID != value))
				{
					this._PacienteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this._Apellidos = value;
				}
			}
		}
	}
	
	public partial class quinta_consultaResult
	{
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Tratamiento;
		
		public quinta_consultaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this._Apellidos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tratamiento", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tratamiento
		{
			get
			{
				return this._Tratamiento;
			}
			set
			{
				if ((this._Tratamiento != value))
				{
					this._Tratamiento = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
